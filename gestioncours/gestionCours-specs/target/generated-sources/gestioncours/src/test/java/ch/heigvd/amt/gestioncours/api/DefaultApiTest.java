/*
 * Authentication api
 * An API for authentication
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.heigvd.amt.gestioncours.api;

import ch.heigvd.amt.gestioncours.ApiException;
import ch.heigvd.amt.gestioncours.dto.Enrollment;
import ch.heigvd.amt.gestioncours.dto.EnrollmentList;
import ch.heigvd.amt.gestioncours.dto.Labo;
import ch.heigvd.amt.gestioncours.dto.Subject;
import ch.heigvd.amt.gestioncours.dto.SubjectList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * create an Enrollment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEnrollmentTest() throws ApiException {
        Enrollment enrollment = null;
        api.createEnrollment(enrollment);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Labo
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLaboTest() throws ApiException {
        Labo labo = null;
        api.createLabo(labo);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a subject
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubjectTest() throws ApiException {
        Subject subject = null;
        api.createSubject(subject);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a single enrollment on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEnrollmentTest() throws ApiException {
        Integer id = null;
        api.deleteEnrollment(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a single subject on the ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSubjectTest() throws ApiException {
        Integer id = null;
        api.deleteSubject(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Returns an enrollment based on a single ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findEnrollmentByIdTest() throws ApiException {
        Integer id = null;
        Enrollment response = api.findEnrollmentById(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * gets a single subject based on the ID supplied
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getASubjectTest() throws ApiException {
        Long id = null;
        SubjectList response = api.getASubject(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get the list of all enrollments
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnrollmentsTest() throws ApiException {
        List<EnrollmentList> response = api.getEnrollments();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get the list of all the Labo
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLabosTest() throws ApiException {
        List<Labo> response = api.getLabos();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get the list of all subjects
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubjectsTest() throws ApiException {
        List<SubjectList> response = api.getSubjects();

        // TODO: test validations
    }
    
}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ch.heigvd.amt.gestioncours.api;

import ch.heigvd.amt.gestioncours.api.model.Enrollment;
import ch.heigvd.amt.gestioncours.api.model.EnrollmentList;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-12-13T12:33:48.433+01:00[Europe/Berlin]")

@Validated
@Api(value = "enrollments", description = "the enrollments API")
public interface EnrollmentsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "createEnrollment", notes = "create an Enrollment", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "created"),
        @ApiResponse(code = 401, message = "unexpected error"),
        @ApiResponse(code = 403, message = "forbidden"),
        @ApiResponse(code = 404, message = "not found") })
    @RequestMapping(value = "/enrollments",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Void> createEnrollment(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Enrollment enrollment) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "", nickname = "getEnrollments", notes = "get the list of all enrollments", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success"),
        @ApiResponse(code = 401, message = "unexpected error") })
    @RequestMapping(value = "/enrollments",
        method = RequestMethod.GET)
    default ResponseEntity<Void> getEnrollments(@ApiParam(value = "",required=true) @PathVariable("allEnrollemnts") List<EnrollmentList> allEnrollemnts) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
